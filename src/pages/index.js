import Head from "next/head";
import CountCard from "@/components/CountCard";
import EarningChart from "@/components/Charts/EarningChart";
import { useEffect, useState } from "react";
import { PiUsersThreeFill } from "react-icons/pi";
import { MdLocalOffer, MdOutlineFeaturedVideo } from "react-icons/md";
import { RiStore3Fill } from "react-icons/ri";
import { GiMoneyStack } from "react-icons/gi";
import { useGlobalContext } from "@/context";
import axios from "axios";

export default function Home() {
  const [isClient, setIsClient] = useState(false);

  const { dashboardData, setDashboardData } = useGlobalContext();

  useEffect(() => {
    setIsClient(true);

    const canceltoken = axios.CancelToken.source();
    axios
      .get(`${process.env.NEXT_PUBLIC_API_URL}/analytics`, {
        withCredentials: true,
        cancelToken: canceltoken.token,
      })
      .then((res) => {
        setDashboardData(res.data.data);
      })
      .catch((err) => {
        if (axios.isCancel(err)) console.log("cancelled");
        else console.log(err.response);
      });

    return () => {
      canceltoken.cancel();
    };
  }, []);

  return (
    <>
      <Head>
        <title>DealsEkhane | Admin</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <div className="countCardContainer">
          <CountCard
            title="users"
            count={dashboardData?.totalUsers}
            linkText="See all users"
            icon={<PiUsersThreeFill size={24} />}
          />
          <CountCard
            title="stores"
            count={dashboardData?.totalStores}
            linkText="See all stores"
            icon={<RiStore3Fill size={24} />}
          />
          <CountCard
            title="offers"
            count={dashboardData?.totalOffers}
            linkText="See all offers"
            icon={<MdLocalOffer size={24} />}
          />
          <CountCard
            title="featured offers(today)"
            count="7"
            linkText="See all offers"
            icon={<MdOutlineFeaturedVideo size={24} />}
          />
          <CountCard
            title="earning"
            count={dashboardData?.totalEarnings}
            linkText="View net earning"
            icon={<GiMoneyStack size={24} />}
          />
          <CountCard
            title="unseen reports"
            count={dashboardData?.unseenReports}
            linkText="See all reports"
            icon={<GiMoneyStack size={24} />}
          />
        </div>
        {isClient && (
          <div className={"earningChartContainer"}>
            <EarningChart title="Income (Last 7 days)" data={data1} x="day" />
            <EarningChart
              title="Income (Last 6 months)"
              data={data2}
              x="month"
            />
          </div>
        )}
      </div>
    </>
  );
}

const data1 = [
  {
    day: "February",
    taka: 250,
  },
  {
    day: "March",
    taka: 326,
  },
  {
    day: "April",
    taka: 101,
  },
  {
    day: "May",
    taka: 543,
  },
  {
    day: "June",
    taka: 1295,
  },
  {
    day: "July",
    taka: 190,
  },
];
const data2 = [
  {
    month: "February",
    taka: 2580,
  },
  {
    month: "March",
    taka: 3026,
  },
  {
    month: "April",
    taka: 1101,
  },
  {
    month: "May",
    taka: 5432,
  },
  {
    month: "June",
    taka: 950,
  },
  {
    month: "July",
    taka: 6120,
  },
];
